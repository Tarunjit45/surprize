/* script.js
   - Handles button clicks, API calls, animations & fallbacks
*/

const buttons = document.querySelectorAll('.btn');
const resultWrap = document.getElementById('resultWrap');
const typewriterEl = document.getElementById('typewriter');
const anotherBtn = document.getElementById('another');
const saveBtn = document.getElementById('save');

// üåà Heart particle animation
const canvas = document.getElementById('bgCanvas');
const ctx = canvas.getContext('2d');
resizeCanvas();
window.addEventListener('resize', resizeCanvas);

let particles = [];
function resizeCanvas() {
  canvas.width = innerWidth;
  canvas.height = innerHeight;
}

class Particle {
  constructor() {
    this.reset();
  }
  reset() {
    this.x = Math.random() * canvas.width;
    this.y = canvas.height + Math.random() * 200;
    this.vx = (Math.random() - 0.5) * 0.6;
    this.vy = -1.5 - Math.random() * 1.5;
    this.size = 8 + Math.random() * 12;
    this.alpha = 0.6 + Math.random() * 0.4;
    this.color = `rgba(239,71,125,${this.alpha})`;
  }
  update() {
    this.x += this.vx;
    this.y += this.vy;
    this.alpha -= 0.002;
    if (this.y < -40 || this.alpha <= 0) this.reset();
  }
  draw() {
    ctx.beginPath();
    let s = this.size;
    ctx.moveTo(this.x, this.y);
    ctx.fillStyle = this.color;
    ctx.beginPath();
    ctx.arc(this.x - s / 4, this.y, s / 2, 0, Math.PI * 2);
    ctx.arc(this.x + s / 4, this.y, s / 2, 0, Math.PI * 2);
    ctx.moveTo(this.x - s / 1.1, this.y);
    ctx.bezierCurveTo(this.x, this.y + s, this.x, this.y + s, this.x + s / 1.1, this.y);
    ctx.fill();
  }
}

for (let i = 0; i < 60; i++) particles.push(new Particle());
function loop() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  particles.forEach((p) => {
    p.update();
    p.draw();
  });
  requestAnimationFrame(loop);
}
loop();

// ‚úçÔ∏è Typewriter animation
async function revealText(text) {
  resultWrap.classList.remove('hidden');
  typewriterEl.textContent = '';
  const chars = Array.from(text);
  for (let i = 0; i < chars.length; i++) {
    typewriterEl.textContent += chars[i];
    await new Promise((r) => setTimeout(r, 12 + Math.random() * 18));
  }
  confetti({
    particleCount: 50,
    spread: 80,
    origin: { y: 0.3 },
  });
}

// üí¨ Fetch message from backend
async function fetchMessage(kind) {
  buttons.forEach((b) => (b.disabled = true));
  typewriterEl.textContent = 'Thinking of the perfect words... üí≠';
  resultWrap.classList.remove('hidden');

  try {
    const res = await fetch('/api/generate', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ kind: kind, targetName: "Shrabani Dev", senderName: "Tarunjit" }),
    });

    const json = await res.json();
    if (!res.ok || !json.message) throw new Error("Server error");

    await revealText(json.message);
  } catch (err) {
    console.warn("Fallback triggered:", err.message);

    // ‚ú® Local fallback romantic coder messages
    const localFallbacks = {
      shayari: [
        `üíª ‡¶ï‡ßã‡¶°‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã‡¶á ‡¶§‡ßã‡¶Æ‡¶æ‡ßü ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ,\nSyntax error ‡¶®‡ßá‡¶á, ‡¶ï‡ßá‡¶¨‡¶≤ ‡¶®‡¶ø‡¶ñ‡ßÅ‡¶Å‡¶§ ‡¶≠‡¶æ‡¶∑‡¶æ‡•§\nif (heart == yours) return "Forever"; ‚ù§Ô∏è`,
        `üß† ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶°‡ßá ‡¶Ø‡¶§ if-else ‡¶Ü‡¶õ‡ßá, ‡¶∏‡¶¨‡¶á ${"Shrabani"}-‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø truth return ‡¶ï‡¶∞‡ßá‡•§ üíò`,
        `‚öôÔ∏è ${"Shrabani"}, ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶°‡ßá‡¶∞ perfect algorithm ‚Äî run ‡¶ï‡¶∞‡¶≤‡ßá ‡¶™‡ßÅ‡¶∞‡ßã life optimize ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡ßü! üòç`,
      ],
      message: [
        `üë©‚Äçüíª ${"Shrabani"}, ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶°‡ßá‡¶∞ ‡¶∏‡ßá‡¶á missing semicolon ‚Äî ‡¶§‡ßã‡¶Æ‡¶æ‡ßü ‡¶õ‡¶æ‡ßú‡¶æ ‡¶∏‡¶¨ incomplete ‡¶≤‡¶æ‡¶ó‡ßá‡•§ ‚ù§Ô∏è`,
        `‚å®Ô∏è ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ ‡¶Ø‡¶¶‡¶ø function ‡¶π‡¶§, ‡¶Ü‡¶Æ‡¶ø ‡¶≤‡¶ø‡¶ñ‡¶§‡¶æ‡¶Æ ‚Äî love(${"Shrabani"}); üíì`,
        `üñ•Ô∏è ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶π‡¶æ‡¶∏‡¶ø‡¶ü‡¶æ ‡¶Ø‡ßá‡¶® console.log("happiness"); ‚Äî ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶≤‡ßá‡¶á ‡¶™‡ßÅ‡¶∞‡ßã ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ fresh ‡¶π‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶Ø‡¶º! üíï`,
      ],
      poem: [
        `üß† ‡¶∏‡¶´‡¶ü‡¶ì‡ßü‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã‡¶á ‡¶§‡ßÅ‡¶Æ‡¶ø, ${"Shrabani"} ‚Äî ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶π‡¶æ‡¶∏‡¶ø‡¶§‡ßá ‡¶Ü‡¶Æ‡¶ø crash ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡¶á,\n‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ö‡ßã‡¶ñ debug ‡¶ï‡¶∞‡¶§‡ßá ‡¶ï‡¶∞‡¶§‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßÅ‡¶∞‡ßã logic ‡¶π‡¶æ‡¶∞‡¶ø‡ßü‡ßá ‡¶Ø‡¶æ‡ßü‡•§ üíñ`,
        `üåô ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ö‡ßã‡¶ñ‡ßá ‡¶§‡¶æ‡¶∞‡¶æ‡¶∞ ‡¶Ü‡¶≤‡ßã, ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶£‡ßç‡¶†‡ßá bug-free ‡¶ï‡ßã‡¶°‡ßá‡¶∞ ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ,\n‡¶Ü‡¶Æ‡¶ø compile ‡¶ï‡¶∞‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¶‡¶ø‡¶® ‡¶®‡¶§‡ßÅ‡¶® version-‡¶è‡•§ üíû`,
        `‚ö° ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ presence ‡¶Æ‡¶æ‡¶®‡ßá high-speed WiFi,\n‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶õ‡¶æ‡ßú‡¶æ ‡¶Æ‡¶æ‡¶®‡ßá ‚ÄúServer Not Found‚Äù! üíª‚ù§Ô∏è`,
      ],
    };

    const randoms = localFallbacks[kind] || ["üíî ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞ ‡¶ò‡ßÅ‡¶Æ‡¶æ‡¶ö‡ßç‡¶õ‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ ‡¶ú‡ßá‡¶ó‡ßá ‡¶Ü‡¶õ‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§"];
    const message = randoms[Math.floor(Math.random() * randoms.length)];

    await revealText(`üß† AI offline... but here‚Äôs a line straight from a coder‚Äôs heart ‚ù§Ô∏è\n\n${message}`);
  } finally {
    buttons.forEach((b) => (b.disabled = false));
  }
}

// ü™Ñ Button events
buttons.forEach((btn) => {
  btn.addEventListener('click', () => {
    const kind = btn.getAttribute('data-kind');
    fetchMessage(kind);
  });
});

anotherBtn.addEventListener('click', () => fetchMessage('message'));

saveBtn.addEventListener('click', () => {
  const text = typewriterEl.textContent;
  if (!text) return;
  const blob = new Blob([text], { type: 'text/plain;charset=utf-8' });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = 'for_shrabani.txt';
  document.body.appendChild(a);
  a.click();
  a.remove();
  URL.revokeObjectURL(url);
});

